{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,uBACxCC,EAAYF,SAASC,cAAc,sBACnCE,EAAcH,SAASC,cAAc,wBAC5BD,SAASC,cAAc,UAE3BG,iBAAiB,SACxB,SAAqBC,G,kBAQf,IAAIC,EAAWC,EAAI,EACnBC,YACE,SAAAC,GACE,IAAuBC,EAAUC,GAAVD,EAWTJ,EAXmBK,EAWTF,EAVf,IAAIG,SAAQ,SAACC,EAASC,GACLC,KAAKC,SAAW,GAEpCH,EAAQ,CAAEH,WAAUC,iBAEpBG,EAAO,CAAEJ,WAAUC,gB,KAMtBM,MAAK,SAAAC,G,IAAGR,EAAQQ,EAARR,SAAUS,EAAYD,EAAZP,aACjBd,EAAAuB,OAAOC,QACL,uBAAwCC,OAAfZ,EAAS,QAAmBY,OAAbH,EAAa,M,IAGxDI,OAAM,SAAAL,G,IAAGR,EAAQQ,EAARR,SAAUS,EAAYD,EAAZP,aAClBd,EAAAuB,OAAOI,QACL,sBAAqCF,OAAfZ,EAAS,QAAmBY,OAAbH,EAAa,M,MAI1DM,EACAA,GAEFA,GAASC,C,EApCbrB,EAAMsB,iBACN,IAAIF,EAAQG,OAAO7B,EAAW8B,OAC5BH,EAAOE,OAAO1B,EAAU2B,OACxBC,EAASF,OAAOzB,EAAY0B,OAE9B,GAAIJ,EAAQ,GAAKC,EAAO,GAAKI,GAAU,EACrC,IAAK,IAAIC,EAAI,EAAGA,EAAID,EAAQC,GAAK,EAACC,EAAAD,QAiClClC,EAAAuB,OAAOI,QAAQ,+B","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst inputDelay = document.querySelector('input[name=\"delay\"]'),\n  inputStep = document.querySelector('input[name=\"step\"]'),\n  inputAmount = document.querySelector('input[name=\"amount\"]'),\n  button = document.querySelector('button');\n\nbutton.addEventListener('click', startScript);\nfunction startScript(event) {\n  event.preventDefault();\n  let delay = Number(inputDelay.value),\n    step = Number(inputStep.value),\n    amount = Number(inputAmount.value);\n\n  if (delay > 0 && step > 0 && amount >= 0) {\n    for (let i = 0; i < amount; i += 1) {\n      let position = i + 1;\n      setTimeout(\n        currentDelay => {\n          function createPromise(position, currentDelay) {\n            return new Promise((resolve, reject) => {\n              const shouldResolve = Math.random() > 0.3;\n              if (shouldResolve) {\n                resolve({ position, currentDelay });\n              } else {\n                reject({ position, currentDelay });\n              }\n            });\n          }\n\n          createPromise(position, currentDelay)\n            .then(({ position, currentDelay }) => {\n              Notify.success(\n                `✅ Fulfilled promise ${position} in ${currentDelay}ms`\n              );\n            })\n            .catch(({ position, currentDelay }) => {\n              Notify.failure(\n                `❌ Rejected promise ${position} in ${currentDelay}ms`\n              );\n            });\n        },\n        delay,\n        delay\n      );\n      delay += step;\n    }\n  } else {\n    Notify.failure('Please enter positive values');\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$inputDelay","document","querySelector","$ce04d3a99e08e73b$var$inputStep","$ce04d3a99e08e73b$var$inputAmount","addEventListener","event","position1","i","setTimeout","currentDelay1","position","currentDelay","Promise","resolve","reject","Math","random","then","param","_$currentDelay","Notify","success","concat","catch","failure","delay","step","preventDefault","Number","value","amount","i1","_loop"],"version":3,"file":"03-promises.7bb3728c.js.map"}